//**
import org.apache.spark.sql.SparkSession
import org.slf4j.{Logger, LoggerFactory}
//**
object Tester extends App {
  implicit val logger: Logger = LoggerFactory.getLogger("myLogger")
//**
  case class Vertex(x: Double, y: Double){
    override def toString: String = { s"$x $y" }

    def toWKT: String = { s"POINT(${toString})"}
  }

  case class Hedge(v1: Vertex, v2: Vertex, id: String){
    def toWKT: String = { s"LINESTRING(${v1.toString}, ${v2.toString})" }
  }
//**
  val v1 = Vertex(0,1)
  val v2 = Vertex(1,2)
  val v3 = Vertex(1,0)
  val v4 = Vertex(2,1)

  val h1 = Hedge(v1, v2, "A0")
  val h2 = Hedge(v2, v3, "A0")
  val h3 = Hedge(v3, v1, "A0")
  val h4 = Hedge(v4, v3, "A0")
  val h5 = Hedge(v3, v2, "A0")
  val h6 = Hedge(v2, v4, "A0")
//**
}
