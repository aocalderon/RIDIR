#!/bin/bash

POSITIONAL_ARGS=()
while [[ $# -gt 0 ]]; do
    case $1 in
	-d|--dataset)
	    DATASET="$2"
	    shift
	    shift
	    ;;
	-t|--tolerance)
	    TOLERANCE="$2"
	    shift # past argument
	    shift # past value
	    ;;
	-f|--first)
	    FIRST="$2"
	    shift # past argument
	    shift # past value
	    ;;
	-i|--increment)
	    INCREMENT="$2"
	    shift # past argument
	    shift # past value
	    ;;
	-l|--last)
	    LAST="$2"
	    shift # past argument
	    shift # past value
	    ;;
	-n|--iterations)
	    N="$2"
	    shift # past argument
	    shift # past value
	    ;;	
	-p|--partitions)
	    PARTITIONS="$2"
	    shift # past argument
	    shift # past value
	    ;;	
	-m|--master)
	    MASTER="$2"
	    shift # past argument
	    shift # past value
	    ;;	
	-o|--ooption)
	    OOPTION="$2"
	    shift # past argument
	    shift # past value
	    ;;	
	-e|--olevel)
	    OLEVEL="$2"
	    shift # past argument
	    shift # past value
	    ;;	
	--debug)
	    DEBUG="--debug"
	    shift # past argument
	    ;;
	--loadsdcel)
	    LOADSDCEL="--loadsdcel"
	    shift # past argument
	    ;;
	-*|--*)
	    echo "Unknown option $1"
	    exit 1
	    ;;
	*)
	    POSITIONAL_ARGS+=("$1") # save positional arg
	    shift # past argument
	    ;;
    esac
done
set -- "${POSITIONAL_ARGS[@]}" # restore positional parameters

echo "DATASET    = ${DATASET}"
echo "TOLERANCE  = ${TOLERANCE}"

if [ -z ${PARTITIONS+x} ] # if PARTITIONS does not exist...
then 
    PS=(`seq $FIRST $INCREMENT $LAST`)
    echo "FIRST      = ${FIRST}"
    echo "INCREMENT  = ${INCREMENT}"
    echo "LAST       = ${LAST}"    
else 
    PS=(`seq $PARTITIONS 1 $PARTITIONS`)    
    echo "PARTITIONS = ${PARTITIONS}"
fi

if [ -v N ];         then echo "ITERATIONS = ${N}";       else N=1;          fi
if [ -v DEBUG ];     then echo "DEBUG      = YES";        else DEBUG="";     fi
if [ -v LOADSDCEL ]; then echo "LOADSDCEL  = YES";        else LOADSDCEL=""; fi
if [ -v OOPTION ];   then echo "OOPTION    = ${OOPTION}"; else OOPTION=0;    fi
if [ -v OLEVEL ];    then echo "OLEVEL     = ${OLEVEL}";  else OLEVEL=4;     fi

if [ -v MASTER ]
then
    echo "MASTER     = ${MASTER}"
else
    MASTER="yarn"
    echo "MASTER     = yarn"
fi

for n in $(seq 1 $N)
do
    for P in "${PS[@]}"
    do
	echo "RUN        = $n"
	./sdcel2_debug \
	    --hdfspath $DATASET/P$P \
	    --localpath /home/acald013/RIDIR/local_path/$DATASET/P$P/ \
	    --tolerance $TOLERANCE \
	    --tag "${P}_${DATASET}_${TOLERANCE}_${OOPTION}_${OLEVEL}_${n}" \
	    --master $MASTER \
	    --ooption $OOPTION --olevel $OLEVEL $DEBUG $LOADSDCEL
    done
done
